{"version":3,"sources":["components/NewsList.tsx","constants/index.ts","requests/index.ts","actions/index.ts","constants/action-types.ts","components/SearchButton.tsx","components/SearchForm.tsx","components/Tabs.tsx","components/News.tsx","reducers/index.ts","store/index.ts","index.tsx"],"names":["NewsList","this","props","data","length","react_default","a","createElement","className","map","item","index","key","style","backgroundImage","concat","urlToImage","backgroundSize","Date","publishedAt","toDateString","title","author","href","url","source","name","React","Component","connect","state","activeTab","tabs","fetchNews","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","topic","NEWS_URL","news","wrap","_context","prev","next","fetch","then","res","json","articles","sent","abrupt","stop","_x","apply","arguments","setActiveTab","dispatch","type","payload","getNews","ssf","onClick","SearchForm","debouncedLoad","debounce","val","_this","doSearch","searchString","timeout","handleSubmit","e","preventDefault","hideSearchForm","handleChange","console","log","currentTarget","value","_this$props","isSearchForm","onSubmit","id","placeholder","onChange","disabled","Tabs","isTabActive","tab","handleClick","_this2","toUpperCase","News","Fragment","components_Tabs","components_NewsList","components_SearchForm","components_SearchButton","rootReducer","combineReducers","undefined","action","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","components_News","document","getElementById"],"mappings":"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","file":"static/js/main.5480ef11.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { INews, IState } from \"../interfaces\";\n\ninterface IProps {\n  activeTab: string;\n  data: INews[];\n}\n\nclass NewsList extends React.Component<IProps> {\n  public render() {\n    if (!this.props.data) {\n      return (\n        <div className=\"loading\">\n          <h1>Loading...</h1>\n        </div>\n      );\n    }\n\n    if (!this.props.data.length) {\n      return (\n        <div className=\"no-news\">\n          <h1>There are no items.</h1>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"news-list\">\n        { this.props.data.map((item: INews, index: number) => {\n          return <div key={ index } className=\"news-item\" style={ {\n            backgroundImage: `url(${item.urlToImage})`,\n            backgroundSize: \"cover\",\n          } }>\n            <div className=\"filter\">\n              <div className=\"date\">{ new Date(item.publishedAt).toDateString() }</div>\n              <div className=\"title\">{ item.title }</div>\n              <div className=\"author\"><span>Author:</span> { item.author }</div>\n              <a className=\"source\" href={ item.url }>{ item.source.name }</a>\n            </div>\n          </div>;\n        }) }\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state: IState) => ({\n    activeTab: state.activeTab,\n    data: state.data,\n  }),\n  {},\n)(NewsList);\n","export const BASE_URL: string = \"https://newsapi.org/v2/everything?q=\";\nexport const API_KEY: string = \"700e4adb5d1248b191265b4ceb3fc20e\";\nexport const tabs: string[] = [\"People\", \"Auto\", \"Technologies\", \"Realty\"];\n","import { API_KEY, BASE_URL } from \"../constants\";\n\n\nexport const fetchNews = async (topic: string) => {\n  const NEWS_URL: string = `${BASE_URL}${topic}&apiKey=${API_KEY}`;\n\n  const news = await fetch(NEWS_URL)\n    .then((res) => res.json())\n    .then((data) => data.articles);\n\n  return news;\n};\n","import { Dispatch } from \"redux\";\nimport { GET_NEWS, SET_ACTIVE_TAB } from \"../constants/action-types\";\nimport { fetchNews } from \"../requests\";\n\nexport const setActiveTab = (activeTab: string) => (dispatch: Dispatch) => {\n  dispatch({ type: SET_ACTIVE_TAB, payload: activeTab });\n};\n\nexport const getNews = (activeTab: string) => async (dispatch: Dispatch) => {\n  const data = await fetchNews(activeTab);\n  dispatch({ type: GET_NEWS, payload: data });\n  return data;\n};\n\nexport const showSearchForm = () => (dispatch: Dispatch) => {\n  dispatch({ type: \"SHOW_SEARCH_FORM\", payload: true });\n};\n\nexport const hideSearchForm = () => (dispatch: Dispatch) => {\n  dispatch({ type: \"HIDE_SEARCH_FORM\", payload: false });\n};\n","export const GET_NEWS = \"GET_NEWS\";\nexport const SET_ACTIVE_TAB = \"SET_ACTIVE_TAB\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { showSearchForm } from \"../actions\";\nimport { IState } from \"../interfaces\";\n\ninterface IProps {\n  ssf: () => void;\n}\n\nconst SearchButton = (props: IProps) => {\n  const { ssf } = props;\n\n  const handleClick = () => {\n    ssf();\n  };\n\n  return (\n    <button className=\"search-button\" onClick={ handleClick }>\n      Search\n    </button>\n  );\n};\n\nexport default connect(\n  (state: IState) => ({}),\n  {\n    ssf: showSearchForm,\n  },\n)(SearchButton);\n\n\n","import { debounce } from \"debounce\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getNews, hideSearchForm, setActiveTab, } from \"../actions\";\nimport { INews, IState } from \"../interfaces\";\n\ninterface IProps {\n  data: INews[];\n  isSearchForm: boolean;\n  hideSearchForm: () => void;\n  getNews: (activeTab: string) => void;\n  setActiveTab: (activeTab: string) => void;\n}\n\nclass SearchForm extends React.Component<IProps, { searchString: string, timeout: any }> {\n  public debouncedLoad = debounce((val: string) => {\n    this.doSearch(val);\n  }, 800);\n\n  public state = {\n    searchString: \"\",\n    timeout: null,\n  };\n\n  public handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    this.props.hideSearchForm();\n  }\n\n  public doSearch = (val: string) => {\n    this.props.setActiveTab(val);\n    this.props.getNews(val);\n  }\n\n  // public doDelayedSearch(val: string) {\n  //   if (this.state.timeout) {\n  //     this.setState({ timeout: null });\n  //   }\n\n  //   this.setState({\n  //     timeout: setTimeout(() => {\n  //       this.doSearch(val);\n  //     }, 800),\n  //   });\n  // }\n\n  public handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    console.log(e.currentTarget.value);\n    this.debouncedLoad(e.currentTarget.value);\n  }\n\n  public render() {\n    const { data, isSearchForm } = this.props;\n\n    if (isSearchForm === true) {\n      return (\n        <form className=\"search-form\" onSubmit={ this.handleSubmit }>\n          <div>\n            {/* <label htmlFor=\"sf\">Search</label> */}\n            <input type=\"text\" id=\"sf\" placeholder=\"Search\" onChange={ this.handleChange } />\n            <button disabled>Sort A-Z</button>\n            <button disabled>Sort by Author</button>\n            <button type=\"submit\">Close</button>\n            {/* <hr />\n            { data.map((item: INews, index: number) => {\n              return (\n                <div key={ index }>{ item.title }</div>\n              );\n            }) } */}\n          </div>\n        </form>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default connect(\n  (state: IState) => ({\n    data: state.data,\n    isSearchForm: state.isSearchForm,\n  }),\n  {\n    getNews,\n    hideSearchForm,\n    setActiveTab,\n  },\n)(SearchForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getNews, setActiveTab } from \"../actions\";\nimport { tabs } from \"../constants\";\nimport { IState } from \"../interfaces\";\n\ninterface IProps {\n  activeTab: string;\n  setActiveTab: (activeTab: string) => void;\n  getNews: (activeTab: string) => void;\n}\n\nclass Tabs extends React.Component<IProps> {\n  public componentDidMount() {\n    this.props.setActiveTab(this.props.activeTab);\n    this.props.getNews(this.props.activeTab);\n  }\n\n  public isTabActive = (tab: string) => {\n    if (this.props.activeTab === tab) {\n      return \"active\";\n    }\n\n    return \"\";\n  }\n\n  public handleClick = (tab: string) => () => {\n    this.props.setActiveTab(tab);\n    this.props.getNews(tab);\n  }\n\n  public render() {\n    return (\n      <div className=\"tabs\">\n        {\n          tabs.map((tab) =>\n            <div\n              key={ tab }\n              className={ `tab ${this.isTabActive(tab)}` }\n              onClick={ this.handleClick(tab) }\n            >\n              { tab.toUpperCase() }\n            </div>,\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state: IState) => ({\n    activeTab: state.activeTab,\n    data: state.data,\n  }),\n  {\n    getNews,\n    setActiveTab,\n  },\n)(Tabs);\n\n","import React from \"react\";\nimport NewsList from \"./NewsList\";\nimport SearchButton from \"./SearchButton\";\nimport SearchForm from \"./SearchForm\";\nimport Tabs from \"./Tabs\";\n\nconst News = () => (\n  <>\n    <Tabs />\n    <NewsList />\n    <SearchForm />\n    <SearchButton />\n  </>\n);\n\nexport default News;\n\n","import { combineReducers } from \"redux\";\nimport { tabs } from \"../constants\";\nimport { GET_NEWS, SET_ACTIVE_TAB } from \"../constants/action-types\";\nimport { IAction, INews } from \"../interfaces\";\n\nconst data = (state: INews[] = [], action: IAction) => {\n  if (action.type === GET_NEWS) {\n    return action.payload || [];\n  } else {\n    return state;\n  }\n};\n\nconst activeTab = (state: string = tabs[0], action: IAction) => {\n  if (action.type === SET_ACTIVE_TAB) {\n    return action.payload;\n  } else {\n    return state;\n  }\n};\n\nconst isSearchForm = (state: boolean = false, action: IAction) => {\n  if (action.type === \"SHOW_SEARCH_FORM\" || action.type === \"HIDE_SEARCH_FORM\") {\n    return action.payload;\n  } else {\n    return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  activeTab,\n  data,\n  isSearchForm,\n});\n\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n  rootReducer,\n  applyMiddleware(\n    thunkMiddleware,\n    loggerMiddleware,\n  ),\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport News from \"./components/News\";\nimport \"./css/index.css\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={ store }>\n    <News />\n  </Provider>, document.getElementById(\"root\"));\n"],"sourceRoot":""}